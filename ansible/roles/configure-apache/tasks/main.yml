---
# File: roles/configure-apache/tasks/main.yml
# Purpose: Installs and configures Apache.

- name: Ensure Apache is installed
  action: >
    {{ ansible_pkg_mgr }} name={{ item }} state=present update_cache=yes
  with_items:
    - httpd
    - mod_ssl
    - mod_security

- name: Copy DigitalOcean Root CA Certificate to /etc/pki/ca-trust/source/anchors/
  copy:
    src: '../files/ca-certificate.crt'
    dest: '/etc/pki/ca-trust/source/anchors/'
  register: do_cert_added

- name: Install DigitalOcean Root CA Certificate
  shell: update-ca-trust
  when: do_cert_added.changed

- name: Install packages required to run WordPress
  action: >
    {{ ansible_pkg_mgr }} name={{ item }} state=present update_cache=yes
  with_items:
    - mysql
    - php
    - php-mysqlnd
    - php-fpm
    - php-json
    - php-gd
    - php-mbstring
    - php-pdo
    - php-xml
    - php-pecl-zip
    - ImageMagick

- name: Replace configuration file for php-fpm to reduce memory consumption
  copy:
    src: '../files/www.conf'
    dest: '/etc/php-fpm.d/www.conf'
    owner: 'root'
    group: 'root'
    mode: '0644'
  register: phpfpm_config

- name: Restart php-fpm
  service:
    name: php-fpm
    state: restarted
    enabled: true
  when: phpfpm_config.changed

- name: 'Ensure {{ apache_doc_root }} is present and permissions are correct'
  file:
    path: '{{ apache_doc_root }}'
    state: directory
    mode: 'u=rwx,g=rx,o=rx'

- name: Set httpd_can_network_connect flag on and persist
  seboolean:
    name: httpd_can_network_connect
    state: true
    persistent: true

- name: Set httpd_can_network_connect_db flag on and persist
  seboolean:
    name: httpd_can_network_connect_db
    state: true
    persistent: true

- name: Set httpd_use_nfs flag on and persist
  seboolean:
    name: httpd_use_nfs
    state: true
    persistent: true

- name: Reconfigure Apache
  template:
    src: ../templates/httpd.conf.j2
    dest: /etc/httpd/conf/httpd.conf
    backup: true

- name: 'Add basic vhost file'
  template:
    src: ../templates/vhost.conf.j2
    dest: '/etc/httpd/conf.d/{{ apache_hostname }}.conf'
    backup: true

- name: Ensure welcome.conf is not present
  file:
    path: /etc/httpd/conf.d/welcome.conf
    state: absent

- name: Copy mod_security configuration file
  file:
    src: '../files/mod_security.conf'
    dest: '/etc/httpd/conf.d/mod_security.conf'
    backup: true

- name: Ensure Apache is enabled
  service:
    name: httpd
    state: restarted
    enabled: true
